#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'
module EdifactParser
  class Parser < Racc::Parser


  require_relative 'handler'

  attr_reader :handler

  def initialize(tokenizer, handler = Handler.new)
    @tokenizer = tokenizer
    @handler   = handler
    super()
  end

  def next_token
    @tokenizer.next_token
  end

  def parse
    do_parse
    handler
  end
##### State transition tables begin ###

racc_action_table = [
    25,    24,     8,    12,    13,    28,    25,    24,     7,    12,
    13,     4,    12,    13,    12,    13,    12,    13,    25,    24,
    25,    24,    12,    13,     7,     7,    16,     7 ]

racc_action_check = [
    17,    17,     1,    17,    17,    17,    11,    11,     0,    11,
    11,     0,    32,    32,     5,     5,    31,    31,    21,    21,
    20,    20,    19,    19,     2,    10,     8,     3 ]

racc_action_pointer = [
     6,     2,    22,    25,   nil,     8,   nil,   nil,    26,   nil,
    23,     3,   nil,   nil,   nil,   nil,   nil,    -3,   nil,    16,
    17,    15,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    10,     6,   nil,   nil,   nil,   nil ]

racc_action_default = [
   -28,   -28,    -1,   -28,    -3,   -28,    -6,    -7,   -28,    -5,
    -2,   -28,   -23,   -24,   -25,   -26,    37,   -28,    -9,   -10,
   -28,   -28,   -19,   -20,   -21,   -22,    -4,    -8,   -27,   -13,
   -14,   -11,   -12,   -15,   -18,   -16,   -17 ]

racc_goto_table = [
    15,     9,    14,     2,    18,    17,    10,    31,    32,     9,
    27,    26,    11,     3,    29,     1,    30,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    34,    35,    33,    36 ]

racc_goto_check = [
    12,     4,    11,     2,     9,     7,     2,    10,    10,     4,
     9,     8,     6,     3,    12,     1,    11,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    12,    12,    11,    11 ]

racc_goto_pointer = [
   nil,    15,     3,    13,    -1,   nil,     7,    -6,    -6,    -7,
   -13,    -3,    -5,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,     6,     5,   nil,   nil,   nil,   nil,
    19,    20,    21,    22,    23 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 10, :_reduce_none,
  2, 10, :_reduce_none,
  1, 12, :_reduce_none,
  4, 13, :_reduce_none,
  2, 11, :_reduce_none,
  1, 11, :_reduce_none,
  1, 14, :_reduce_7,
  2, 16, :_reduce_none,
  1, 16, :_reduce_none,
  1, 18, :_reduce_none,
  2, 18, :_reduce_none,
  2, 18, :_reduce_none,
  2, 18, :_reduce_none,
  2, 18, :_reduce_none,
  3, 18, :_reduce_none,
  3, 18, :_reduce_none,
  3, 18, :_reduce_none,
  3, 18, :_reduce_none,
  1, 19, :_reduce_none,
  1, 19, :_reduce_none,
  1, 23, :_reduce_21,
  1, 22, :_reduce_22,
  1, 20, :_reduce_none,
  1, 21, :_reduce_none,
  1, 15, :_reduce_none,
  1, 15, :_reduce_none,
  1, 17, :_reduce_27 ]

racc_reduce_n = 28

racc_shift_n = 37

racc_token_table = {
  false => 0,
  :error => 1,
  :QUALIFIER => 2,
  :STRING => 3,
  :NUMBER => 4,
  :OPTIONAL_BEGIN => 5,
  "+" => 6,
  ":" => 7,
  "'" => 8 }

racc_nt_base = 9

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "QUALIFIER",
  "STRING",
  "NUMBER",
  "OPTIONAL_BEGIN",
  "\"+\"",
  "\":\"",
  "\"'\"",
  "$start",
  "document",
  "segments",
  "beginning",
  "segment",
  "qual",
  "starter",
  "values",
  "segment_end",
  "value",
  "scalar",
  "plus",
  "colon",
  "string",
  "number" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

def _reduce_7(val, _values, result)
 @handler.start_segment; @handler.qualifier val[0] 
    result
end

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

def _reduce_21(val, _values, result)
 @handler.scalar val[0] 
    result
end

def _reduce_22(val, _values, result)
 @handler.scalar val[0] 
    result
end

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

def _reduce_27(val, _values, result)
 @handler.end_segment 
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module EdifactParser
